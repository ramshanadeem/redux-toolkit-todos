{"version":3,"sources":["logo.svg","store/todoSlice.js","Viewtodo.js","AddTodo.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["todoSlice","createSlice","name","initialState","title","id","reducers","addtodo","reducer","state","action","console","log","payload","newObj","prepare","uuidv4","deletetodo","filter","item","actions","todoReducer","Viewtodo","useState","dispatch","useDispatch","useSelector","map","onClick","AddTodo","settask","settitle","onSubmit","e","preventDefault","type","onChange","target","value","store","configureStore","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAe,I,0CCGTA,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAAc,CAAC,CAAEC,MAAO,WAAYC,GAAI,IACxCC,SAAU,CACNC,QAAS,CACLC,QADK,SACGC,EAAOC,GACXC,QAAQC,IAAIF,EAAOG,SACnB,IAAIC,EAASJ,EAAOG,QACAC,EAAdT,GAAcS,EAAVV,MAEV,MADY,sBAAOK,GAAP,CAAcK,KAI9BC,QATK,SASGX,GACJ,MAAO,CAAES,QAAS,CAAET,MAAOA,EAAOC,GAAIW,kBAG9CC,WAAY,CACRT,QADQ,SACAC,EAAOC,GAGX,OAFAC,QAAQC,IAAIF,EAAOG,QAAQR,IACXI,EAAMS,QAAO,SAAAC,GAAI,OAAIA,EAAKd,IAAMK,EAAOG,QAAQR,OAKnEU,QARQ,SAQAV,GACJ,MAAO,CAAEQ,QAAS,CAAER,Y,EAcGL,EAAUoB,QAAlCb,E,EAAAA,QAASU,E,EAAAA,WAETI,EADKrB,EAAUQ,QChBfc,MAvBf,WAAqB,IAAD,EACUC,mBAAS,IADnB,mBACTnB,EADS,KAEVoB,GAFU,KAECC,eACXhB,EAAQiB,aAAY,SAAAjB,GAAK,OAAIA,KAKnC,OAJAE,QAAQC,IAAI,QAAQH,GAKhB,gCAAML,EAEEK,EAAMkB,KAAI,SAACR,GAAD,OACN,gCACKA,EAAKf,MACV,wBAAQwB,QAAS,kBATXvB,EAS4Bc,EAAKd,QARlDmB,EAASP,EAAWZ,IADJ,IAACA,GASN,iBAFUc,EAAKd,WCiBpBwB,MA7Bf,WACI,IAAML,EAAWC,cADF,EAESF,mBAAS,IAFlB,mBAEFO,GAFE,aAGWP,qBAHX,mBAGRnB,EAHQ,KAGD2B,EAHC,KAkBf,OACI,gCACI,uBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBACFJ,EAAQ,CACJ1B,MAAOA,EACPC,GAAIW,gBAERQ,EAASjB,EAAQH,IACjBO,QAAQC,IAAI,SAKR,UACI,uBAAOuB,KAAK,OAAOjC,KAAK,QAAQkC,SAjBvB,SAACH,GAClBF,EAASE,EAAEI,OAAOC,UAiBV,wBAAQH,KAAK,SAAb,oBAEJ,cAAC,EAAD,QCxBGI,EAHDC,YAAe,CACzBhC,QAASa,ICaEoB,MAVf,WACE,OACE,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACA,qBAAKG,UAAU,MAAf,SACE,cAAC,EAAD,SCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4de8aaf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createSlice } from '@reduxjs/toolkit'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nconst todoSlice = createSlice({\r\n    name: 'todo',\r\n    initialState: [{ title: 'buy milk', id: 1 }],\r\n    reducers: {\r\n        addtodo: {\r\n            reducer(state, action) {\r\n                console.log(action.payload)\r\n                let newObj = action.payload\r\n                let { id, title } = newObj\r\n                let newState = [...state, newObj]\r\n                return newState\r\n\r\n            },\r\n            prepare(title) {\r\n                return { payload: { title: title, id: uuidv4() } }\r\n            }\r\n        },\r\n        deletetodo: {\r\n            reducer(state, action) {\r\n                console.log(action.payload.id)\r\n                let newState1 = state.filter(item => item.id != action.payload.id)\r\n                return newState1\r\n\r\n\r\n            },\r\n            prepare(id) {\r\n                return { payload: { id } }\r\n            }\r\n        }\r\n        /* deletetodo(state, action) {\r\n            console.log(action.payload)\r\n            let newState1 = state.filter(\r\n                (item) => item.id !== action.payload\r\n            )\r\n            return newState1\r\n\r\n        } */\r\n\r\n    }\r\n})\r\nexport const { addtodo, deletetodo } = todoSlice.actions;\r\nconst todoReducer = todoSlice.reducer;\r\nexport default todoReducer","import React,{useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useDispatch} from 'react-redux'\r\nimport {deletetodo} from './store/todoSlice'\r\n\r\nfunction Viewtodo() {\r\n    const [title, settitle] = useState('')\r\n    const dispatch = useDispatch()\r\n    const state = useSelector(state => state)\r\n    console.log('.....',state)\r\n    const handleDelete = (id)=>{\r\n         dispatch(deletetodo(id))\r\n    }\r\n    return (\r\n        <div>{title}\r\n            {\r\n                state.map((item)=>(\r\n                    <div key={item.id}>\r\n                        {item.title}\r\n                    <button onClick={()=>handleDelete(item.id)}>X</button>\r\n                     </div>\r\n                ))\r\n                //sdadas\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Viewtodo\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Viewtodo from './Viewtodo'\r\nimport { addtodo } from './store/todoSlice'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nfunction AddTodo() {\r\n    const dispatch = useDispatch()\r\n    const [task, settask] = useState({})\r\n    const [title, settitle] = useState()\r\n    const handleChange = (e) => {\r\n        settitle(e.target.value)\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        settask({\r\n            title: title,\r\n            id: uuidv4()\r\n        })\r\n        dispatch(addtodo(title))\r\n        console.log('sdsd')\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type='text' name='title' onChange={handleChange} />\r\n                <button type='submit'>Add</button>\r\n            </form>\r\n            <Viewtodo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTodo\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport todoReducer from './todoSlice'\r\nconst store = configureStore({\r\n    reducer: todoReducer\r\n})\r\nexport default store","import logo from './logo.svg';\r\nimport './App.css';\r\nimport AddTodo from './AddTodo';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      <AddTodo/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}